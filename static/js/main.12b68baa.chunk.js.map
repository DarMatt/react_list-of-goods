{"version":3,"sources":["components/GoodsList.jsx","App.js","index.js"],"names":["GoodsList","visibleGoods","selectedGoods","addSelectedGoods","removeSelectedGoods","className","map","product","key","includes","type","onClick","classNames","addSelected","goodsFromServer","App","state","isVisiblePage","goods","sortBy","opposite","setState","prevState","filter","arr","deleteSelectedGoods","start","close","sortAlf","sortLeng","reverse","reset","this","sort","a","b","localeCompare","length","join","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12b68baa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const GoodsList = ({\n  visibleGoods,\n  selectedGoods,\n  addSelectedGoods,\n  removeSelectedGoods,\n}) => (\n  <ul className=\"list\">\n    {visibleGoods.map(product => (\n      <li key={product} className=\"item\">\n        <span className={`item-text ${selectedGoods.includes(product)\n          ? 'active' : ''}`}\n        >\n          {product}\n        </span>\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={() => addSelectedGoods(product)}\n            className={classNames(`add`, {\n              addSelected: selectedGoods.includes(product),\n            })}\n          >\n            Select\n          </button>\n          {selectedGoods.includes(product) && (\n            <button\n              type=\"button\"\n              onClick={() => removeSelectedGoods(product)}\n              className=\"remove\"\n            >\n              Remove\n            </button>\n          )}\n        </div>\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  visibleGoods: PropTypes.arrayOf(PropTypes.string).isRequired,\n  selectedGoods: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addSelectedGoods: PropTypes.func.isRequired,\n  removeSelectedGoods: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList';\n// import classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isVisiblePage: false,\n    goods: goodsFromServer,\n    sortBy: '',\n    opposite: false,\n    selectedGoods: [],\n  }\n\n  addSelectedGoods = (goods) => {\n    this.setState(prevState => ({\n      selectedGoods: [...prevState.selectedGoods, goods],\n    }));\n  }\n\n  removeSelectedGoods = (goods) => {\n    this.setState(prevState => ({\n      selectedGoods: prevState.selectedGoods.filter(arr => arr !== goods),\n    }));\n  }\n\n  deleteSelectedGoods = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  start = () => {\n    this.setState({ isVisiblePage: true });\n  }\n\n  close = () => {\n    this.setState({ isVisiblePage: false });\n  }\n\n  sortAlf = () => {\n    this.setState({ sortBy: 'alph' });\n  }\n\n  sortLeng = () => {\n    this.setState({\n      sortBy: 'length',\n    });\n  }\n\n  reverse = () => {\n    this.setState({ opposite: true });\n  }\n\n  reset = () => {\n    this.setState({\n      sortBy: '',\n      opposite: false,\n    });\n  }\n\n  render() {\n    const { isVisiblePage,\n      goods,\n      sortBy,\n      opposite,\n      selectedGoods } = this.state;\n    const visibleGoods = [...goods];\n\n    visibleGoods.sort((a, b) => {\n      switch (sortBy) {\n        case 'alph':\n          return a.localeCompare(b);\n        case 'length':\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (opposite) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">\n          {`Selected goods: ${selectedGoods.join(', ')}`}\n        </h1>\n        {!isVisiblePage ? (\n          <button className=\"start\" type=\"button\" onClick={this.start}>\n            Start\n          </button>\n\n        ) : (\n          <>\n            {selectedGoods.length !== 0 && (\n              <button\n                type=\"button\"\n                className=\"cross\"\n                onClick={this.deleteSelectedGoods}\n              >\n                Ð¥\n              </button>\n            )}\n\n            <p className=\"selected\">\n              {`Selected: \n                ${selectedGoods.length}`\n              }\n            </p>\n\n            <button\n              className=\"close-all\"\n              type=\"button\"\n              onClick={this.close}\n            >\n              Close All\n            </button>\n\n            <GoodsList\n              visibleGoods={visibleGoods}\n              selectedGoods={selectedGoods}\n              addSelectedGoods={this.addSelectedGoods}\n              removeSelectedGoods={this.removeSelectedGoods}\n            />\n          </>\n        )}\n        {isVisiblePage && (\n          <>\n            <button\n              className=\"m-btn modify-btn\"\n              type=\"button\"\n              onClick={this.reverse}\n            >\n              Reverse\n            </button>\n            <button\n              className=\"m-btn\n              modify-btn\"\n              type=\"button\"\n              onClick={this.sortAlf}\n            >\n              Sort A-Z\n            </button>\n            <button\n              className=\"m-btn modify-btn\"\n              type=\"button\"\n              onClick={this.sortLeng}\n            >\n              Sort by length\n            </button>\n            <button\n              className=\"m-btn modify-btn\"\n              type=\"button\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          </>\n        )}\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}